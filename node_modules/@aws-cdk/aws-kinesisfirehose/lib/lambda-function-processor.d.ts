import * as lambda from '@aws-cdk/aws-lambda';
import { Construct } from 'constructs';
import { DataProcessorBindOptions, DataProcessorConfig, DataProcessorProps, IDataProcessor } from './processor';
/**
 * (experimental) Use an AWS Lambda function to transform records.
 *
 * @experimental
 */
export declare class LambdaFunctionProcessor implements IDataProcessor {
    private readonly lambdaFunction;
    /**
     * (experimental) The constructor props of the LambdaFunctionProcessor.
     *
     * @experimental
     */
    readonly props: DataProcessorProps;
    /**
     * @experimental
     */
    constructor(lambdaFunction: lambda.IFunction, props?: DataProcessorProps);
    /**
     * (experimental) Binds this processor to a destination of a delivery stream.
     *
     * Implementers should use this method to grant processor invocation permissions to the provided stream and return the
     * necessary configuration to register as a processor.
     *
     * @experimental
     */
    bind(_scope: Construct, options: DataProcessorBindOptions): DataProcessorConfig;
}
